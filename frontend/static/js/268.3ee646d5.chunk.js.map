{"version":3,"file":"static/js/268.3ee646d5.chunk.js","mappings":"qOACA,EAA2B,4BAA3B,EAAgM,sCAAhM,EAAgQ,2CAAhQ,EAAyV,8BAAzV,EAA4Y,sC,SCQtYA,EAAmBC,EAAAA,GAAW,CAClCC,UAAWD,EAAAA,KACRE,QAAQ,kCACRC,WACHC,aAAcJ,EAAAA,KAAaK,IAAI,GAAGF,aAG9BG,EAAwC,CAC5CL,UAAW,GACXG,aAAc,IAoDhB,MAjDA,WACE,IAAQG,EAAcC,EAAAA,EAAAA,UAKtB,OACE,iBAAKC,UAAWC,EAAhB,WACE,mCACA,SAAC,KAAD,CACEC,cAAeL,EACfP,iBAAkBA,EAClBa,gBAAgB,EAChBC,SAXoB,SAACC,GACzBP,EAAUO,IAMR,UAME,UAAC,KAAD,YACE,mBAAOL,UAAWC,EAAlB,oBAEE,SAACK,EAAA,EAAD,CACEN,UAAWC,EACXM,UAAU,OACVC,UAAU,kBAGd,mBAAOR,UAAWC,EAAlB,sBAEE,SAACK,EAAA,EAAD,CACEN,UAAWC,EACXM,UAAU,WACVC,UAAU,qBAGd,gBAAKR,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAQQ,KAAK,SAASC,KAAK,kBAIjC,iBAAKV,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASU,GAAG,YAAYX,UAAU,UAAlC,uBAGA,SAAC,KAAD,CAASW,GAAG,iBAAiBX,UAAU,UAAvC,sCC7DR,EAA2B,+BAA3B,EAAyM,yCAAzM,EAA4Q,8CAA5Q,EAA2W,iCAA3W,EAAia,yCCQ3ZV,EAAmBC,EAAAA,GAAW,CAClCqB,SAAUrB,EAAAA,KAAaG,WACvBF,UAAWD,EAAAA,KACRE,QAAQ,kCACRC,WACHC,aAAcJ,EAAAA,KAAaK,IAAI,GAAGF,aAG9BG,EAA2C,CAC/Ce,SAAU,GACVpB,UAAW,GACXG,aAAc,IA2DhB,MAxDA,WAKE,OACE,iBAAKK,UAAWC,EAAhB,WACE,sCACA,SAAC,KAAD,CACEC,cAAeL,EACfP,iBAAkBA,EAClBc,SAVoB,SAACC,IAEzBQ,EADyBd,EAAAA,EAAAA,cACZM,IAKX,UAKE,UAAC,KAAD,CAAMS,OAAO,IAAIC,OAAO,MAAxB,WACE,mBAAOf,UAAWC,EAAlB,kBAEE,SAACK,EAAA,EAAD,CACEC,UAAU,OACVC,UAAU,WACVR,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,oBAEE,SAACK,EAAA,EAAD,CACEC,UAAU,OACVC,UAAU,YACVR,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,sBAEE,SAACK,EAAA,EAAD,CACEC,UAAU,WACVC,UAAU,eACVR,UAAWC,QAGf,gBAAKD,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAQQ,KAAK,SAASC,KAAK,qBAIjC,iBAAKV,UAAWC,EAAhB,UACG,KACD,SAAC,KAAD,CAASU,GAAG,SAASX,UAAU,UAA/B,oBAGA,SAAC,KAAD,CAASW,GAAG,iBAAiBX,UAAU,UAAvC,sCCtER,EAAuC,gDAAvC,EAAsG,wCCsBtG,EAd2C,SAAC,GAAc,IAAZgB,EAAW,EAAXA,KACtCC,EAAkBlB,EAAAA,EAAAA,aAAAA,cAAAA,gBACxB,OACE,gBACEC,UAAWC,EACXiB,MAAO,CAAED,gBAAgB,QAAD,OAAUA,EAAV,OAF1B,UAIE,gBAAKjB,UAAWC,EAAhB,SACY,WAATe,GAAoB,SAAC,EAAD,KAAgB,SAAC,EAAD","sources":["components/LoginForm/LoginForm.module.scss","components/LoginForm/LoginForm.tsx","components/RegisterForm/RegisterForm.module.scss","components/RegisterForm/RegisterForm.tsx","webpack://gallery-frontend/./src/views/LoginRegister/LoginRegisterView.module.scss?80ca","views/LoginRegister/LoginRegisterView.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authForm\":\"LoginForm_authForm__yphRl\",\"form-animation\":\"LoginForm_form-animation__y0zKY\",\"mobile-form-animation\":\"LoginForm_mobile-form-animation__b9GMy\",\"labelAuthorisation\":\"LoginForm_labelAuthorisation__9y+ZZ\",\"labelAuthorisationInput\":\"LoginForm_labelAuthorisationInput__rkBpd\",\"error\":\"LoginForm_error__JkyWK\",\"btnWrapper\":\"LoginForm_btnWrapper__NewmI\",\"bottomLinksWrapper\":\"LoginForm_bottomLinksWrapper__U3sxB\"};","import { Formik, Form } from \"formik\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Input from \"../elements/Input\";\r\nimport store from \"../../MST/store\";\r\nimport * as Yup from \"yup\";\r\nimport { Button } from \"../elements\";\r\nimport { LoginFormInterface } from \"../../types/user\";\r\nimport styles from \"./LoginForm.module.scss\";\r\n\r\nconst validationSchema = Yup.object({\r\n  userEmail: Yup.string()\r\n    .matches(/^[\\w.]+@([\\w-]+\\.)+[\\w-]{2,4}$/)\r\n    .required(),\r\n  userPassword: Yup.string().min(6).required(),\r\n});\r\n\r\nconst formInitialValues: LoginFormInterface = {\r\n  userEmail: \"\",\r\n  userPassword: \"\",\r\n};\r\n\r\nfunction LoginForm() {\r\n  const { loginInit } = store;\r\n  const formSubmitHandler = (values: LoginFormInterface) => {\r\n    loginInit(values);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.authForm}>\r\n      <h2>Login</h2>\r\n      <Formik\r\n        initialValues={formInitialValues}\r\n        validationSchema={validationSchema}\r\n        validateOnBlur={false}\r\n        onSubmit={formSubmitHandler}\r\n      >\r\n        <Form>\r\n          <label className={styles.labelAuthorisation}>\r\n            E-mail\r\n            <Input\r\n              className={styles.labelAuthorisationInput}\r\n              fieldType=\"text\"\r\n              fieldName=\"userEmail\"\r\n            />\r\n          </label>\r\n          <label className={styles.labelAuthorisation}>\r\n            Password\r\n            <Input\r\n              className={styles.labelAuthorisationInput}\r\n              fieldType=\"password\"\r\n              fieldName=\"userPassword\"\r\n            />\r\n          </label>\r\n          <div className={styles.btnWrapper}>\r\n            <Button type=\"submit\" text=\"Login\" />\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n      <div className={styles.bottomLinksWrapper}>\r\n        <NavLink to=\"/register\" className=\"navLink\">\r\n          Register\r\n        </NavLink>\r\n        <NavLink to=\"/publicGallery\" className=\"navLink\">\r\n          To public gallery\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"authForm\":\"RegisterForm_authForm__I5HS6\",\"form-animation\":\"RegisterForm_form-animation__lqBCl\",\"mobile-form-animation\":\"RegisterForm_mobile-form-animation__pNz7y\",\"labelAuthorisation\":\"RegisterForm_labelAuthorisation__-K-9e\",\"labelAuthorisationInput\":\"RegisterForm_labelAuthorisationInput__nuAk4\",\"error\":\"RegisterForm_error__CcRRP\",\"btnWrapper\":\"RegisterForm_btnWrapper__Av-lk\",\"bottomLinksWrapper\":\"RegisterForm_bottomLinksWrapper__cEIhn\"};","import { Formik, Form } from \"formik\";\r\nimport Input from \"../elements/Input\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport store from \"../../MST/store\";\r\nimport * as Yup from \"yup\";\r\nimport { Button } from \"../elements\";\r\nimport { RegisterFormInterface } from \"../../types/user\";\r\nimport styles from \"./RegisterForm.module.scss\";\r\n\r\nconst validationSchema = Yup.object({\r\n  userName: Yup.string().required(),\r\n  userEmail: Yup.string()\r\n    .matches(/^[\\w.]+@([\\w-]+\\.)+[\\w-]{2,4}$/)\r\n    .required(),\r\n  userPassword: Yup.string().min(6).required(),\r\n});\r\n\r\nconst formInitialValues: RegisterFormInterface = {\r\n  userName: \"\",\r\n  userEmail: \"\",\r\n  userPassword: \"\",\r\n};\r\n\r\nfunction RegisterForm() {\r\n  const formSubmitHandler = (values: RegisterFormInterface) => {\r\n    const { registerInit } = store;\r\n    registerInit(values);\r\n  };\r\n  return (\r\n    <div className={styles.authForm}>\r\n      <h2>Register</h2>\r\n      <Formik\r\n        initialValues={formInitialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={formSubmitHandler}\r\n      >\r\n        <Form action=\"#\" method=\"GET\">\r\n          <label className={styles.labelAuthorisation}>\r\n            Name\r\n            <Input\r\n              fieldType=\"text\"\r\n              fieldName=\"userName\"\r\n              className={styles.labelAuthorisationInput}\r\n            />\r\n          </label>\r\n          <label className={styles.labelAuthorisation}>\r\n            E-mail\r\n            <Input\r\n              fieldType=\"text\"\r\n              fieldName=\"userEmail\"\r\n              className={styles.labelAuthorisationInput}\r\n            />\r\n          </label>\r\n          <label className={styles.labelAuthorisation}>\r\n            Password\r\n            <Input\r\n              fieldType=\"password\"\r\n              fieldName=\"userPassword\"\r\n              className={styles.labelAuthorisationInput}\r\n            />\r\n          </label>\r\n          <div className={styles.btnWrapper}>\r\n            <Button type=\"submit\" text=\"Register\" />\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n      <div className={styles.bottomLinksWrapper}>\r\n        {\" \"}\r\n        <NavLink to=\"/login\" className=\"navLink\">\r\n          Login\r\n        </NavLink>\r\n        <NavLink to=\"/publicGallery\" className=\"navLink\">\r\n          To public gallery\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionLoginRegister\":\"LoginRegisterView_sectionLoginRegister__ToF2W\",\"backdropBlur\":\"LoginRegisterView_backdropBlur__TyeuO\"};","import store from \"../../MST/store\";\r\nimport LoginForm from \"../../components/LoginForm\";\r\nimport RegisterForm from \"../../components/RegisterForm\";\r\nimport styles from \"./LoginRegisterView.module.scss\";\r\n\r\ninterface Props {\r\n  path: string;\r\n}\r\n\r\nconst LoginRegisterView: React.FC<Props> = ({ path }) => {\r\n  const backgroundImage = store.userSettings.userInterface.backgroundImage;\r\n  return (\r\n    <div\r\n      className={styles.sectionLoginRegister}\r\n      style={{ backgroundImage: `url('${backgroundImage}')` }}\r\n    >\r\n      <div className={styles.backdropBlur}>\r\n        {path === \"/login\" ? <LoginForm /> : <RegisterForm />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginRegisterView;\r\n"],"names":["validationSchema","Yup","userEmail","matches","required","userPassword","min","formInitialValues","loginInit","store","className","styles","initialValues","validateOnBlur","onSubmit","values","Input","fieldType","fieldName","type","text","to","userName","registerInit","action","method","path","backgroundImage","style"],"sourceRoot":""}