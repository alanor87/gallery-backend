{"version":3,"file":"static/js/662.465d652f.chunk.js","mappings":"gNACA,EAA4B,6BAA5B,EAAwE,gCAAxE,EAA6H,sCAA7H,EAAoL,kCAApL,EAAwO,mC,SCoIxO,GAAeA,EAAAA,EAAAA,KA9H+B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACvCC,EAAeC,EAAAA,EAAAA,WACvB,EAAqDA,EAAAA,EAAAA,aAA7CC,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,UACvC,EAAgDH,EAAAA,EAAAA,qBAAxCI,EAAR,EAAQA,sBAAuBC,EAA/B,EAA+BA,aACvBC,EAA0BN,EAAAA,EAAAA,oBAAAA,sBAClC,EAAwCA,EAAAA,EAAAA,aAAAA,cAAhCO,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,YAOxB,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,KAAD,CACEC,KAAK,SACLC,MAAM,aACNH,UAAW,YAAcC,EACzBG,KAAK,aACLC,SAAU,GACVC,QAASjB,IAEVG,GACC,gCACG,KACD,gBAAIQ,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CACEM,GAAI,eACJP,UAAU,UACVQ,OAAK,EACLF,QAASjB,EAJX,6BASF,yBACE,SAAC,KAAD,CACEkB,GAAI,iBACJP,UAAU,UACVQ,OAAK,EACLF,QAASjB,EAJX,8BASF,yBACE,SAAC,KAAD,CACEkB,GAAI,iBACJP,UAAU,UACVQ,OAAK,EACLF,QAASjB,EAJX,iCAUJ,4BACGI,EADH,KACeC,MAEf,iBAAKM,UAAWC,EAAhB,WACE,SAAC,KAAD,CACEC,KAAK,SACLF,UAAWC,EACXK,QAAShB,EACTmB,KAAK,YAEP,SAAC,KAAD,CACEP,KAAK,SACLF,UAAWC,EACXQ,KAAK,SACLH,QAhEe,WACzBX,EAAsB,UACtBC,GAAa,IA+DHc,SAAoC,gBAA1Bb,QAGd,iBAAKG,UAAU,qBAAf,WACE,0CACA,SAAC,KAAD,CACEW,cAAeZ,EACfa,UAAWd,EACXe,KAAK,sBAEP,iDAIJ,iCACE,gBAAIb,UAAWC,EAAf,WACE,0BACG,KACD,SAAC,KAAD,CACEM,GAAI,SACJP,UAAU,UACVQ,OAAK,EACLF,QAASjB,EAJX,uBASF,yBACE,SAAC,KAAD,CACEkB,GAAI,YACJP,UAAU,UACVQ,OAAK,EACLF,QAASjB,EAJX,4BAWJ,iBAAKW,UAAU,qBAAf,WACE,0CACA,SAAC,KAAD,CACEW,cAAeZ,EACfa,UAAWd,EACXe,KAAK,sBAEP","sources":["webpack://gallery-frontend/./src/components/Modals/ModalMenu/ModalMenu.module.scss?5bdd","components/Modals/ModalMenu/ModalMenu.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalMenu\":\"ModalMenu_modalMenu__-d3n1\",\"navLinksList\":\"ModalMenu_navLinksList__qFPyU\",\"modalImageCloseBtn\":\"ModalMenu_modalImageCloseBtn__YuZSo\",\"buttonsWrapper\":\"ModalMenu_buttonsWrapper__LSrk0\",\"modalMenuButton\":\"ModalMenu_modalMenuButton__rwGPI\",\"toggleWrapper\":\"ModalMenu_toggleWrapper__xKa6p\"};","import { NavLink } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { ToggleButton, Button } from \"components/elements\";\r\nimport { ModalWindowProps } from \"types/modal\";\r\nimport store from \"../../../MST/store\";\r\nimport styles from \"./ModalMenu.module.scss\";\r\n\r\nconst ModalMenu: React.FC<ModalWindowProps> = ({ modalCloseHandle }) => {\r\n  const { logoutInit } = store;\r\n  const { userIsAuthenticated, userName, userEmail } = store.userSettings;\r\n  const { setModalComponentType, setModalOpen } = store.modalWindowsSettings;\r\n  const { getCurrentGalleryMode } = store.imagesStoreSettings;\r\n  const { lightThemeIsOn, toggleTheme } = store.userSettings.userInterface;\r\n\r\n  const uploadModalHandler = () => {\r\n    setModalComponentType(\"upload\");\r\n    setModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.modalMenu}>\r\n      <Button\r\n        type=\"button\"\r\n        title=\"Close menu\"\r\n        className={\"closeBtn \" + styles.modalImageCloseBtn}\r\n        icon=\"icon_close\"\r\n        iconSize={30}\r\n        onClick={modalCloseHandle}\r\n      />\r\n      {userIsAuthenticated ? (\r\n        <>\r\n          {\" \"}\r\n          <ul className={styles.navLinksList}>\r\n            <li>\r\n              <NavLink\r\n                to={\"/userGallery\"}\r\n                className=\"navLink\"\r\n                exact\r\n                onClick={modalCloseHandle}\r\n              >\r\n                Your gallery\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to={\"/sharedGallery\"}\r\n                className=\"navLink\"\r\n                exact\r\n                onClick={modalCloseHandle}\r\n              >\r\n                Shared images\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to={\"/publicGallery\"}\r\n                className=\"navLink\"\r\n                exact\r\n                onClick={modalCloseHandle}\r\n              >\r\n                Public images\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <span>\r\n            {userName}, {userEmail}\r\n          </span>\r\n          <div className={styles.buttonsWrapper}>\r\n            <Button\r\n              type=\"button\"\r\n              className={styles.modalMenuButton}\r\n              onClick={logoutInit}\r\n              text=\"Logout\"\r\n            />\r\n            <Button\r\n              type=\"button\"\r\n              className={styles.modalMenuButton}\r\n              text=\"Upload\"\r\n              onClick={uploadModalHandler}\r\n              disabled={getCurrentGalleryMode !== \"userGallery\"}\r\n            />\r\n          </div>\r\n          <div className=\"themeToggleWrapper\">\r\n            <span>dark theme</span>\r\n            <ToggleButton\r\n              toggleHandler={toggleTheme}\r\n              isChecked={lightThemeIsOn}\r\n              hint=\"Dark/light theme\"\r\n            />\r\n            <span>light theme</span>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <ul className={styles.navLinksList}>\r\n            <li>\r\n              {\" \"}\r\n              <NavLink\r\n                to={\"/login\"}\r\n                className=\"navLink\"\r\n                exact\r\n                onClick={modalCloseHandle}\r\n              >\r\n                Login\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to={\"/register\"}\r\n                className=\"navLink\"\r\n                exact\r\n                onClick={modalCloseHandle}\r\n              >\r\n                Register\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"themeToggleWrapper\">\r\n            <span>dark theme</span>\r\n            <ToggleButton\r\n              toggleHandler={toggleTheme}\r\n              isChecked={lightThemeIsOn}\r\n              hint=\"Dark/light theme\"\r\n            />\r\n            <span>light theme</span>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ModalMenu);\r\n"],"names":["observer","modalCloseHandle","logoutInit","store","userIsAuthenticated","userName","userEmail","setModalComponentType","setModalOpen","getCurrentGalleryMode","lightThemeIsOn","toggleTheme","className","styles","type","title","icon","iconSize","onClick","to","exact","text","disabled","toggleHandler","isChecked","hint"],"sourceRoot":""}