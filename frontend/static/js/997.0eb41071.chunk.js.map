{"version":3,"file":"static/js/997.0eb41071.chunk.js","mappings":"mQACA,EAAqC,wCAArC,EAAsG,4CAAtG,EAAoK,qCAApK,EAA2O,qDAA3O,EAA+T,kDAA/T,EAA4Y,8CAA5Y,EAA+c,wCAA/c,EAA2gB,uCAA3gB,EAAokB,qC,SC+IpkB,EAzIgD,SAAC,GAI1C,IAHLA,EAGI,EAHJA,UACAC,EAEI,EAFJA,aACAC,EACI,EADJA,iBAEA,GAA0CC,EAAAA,EAAAA,UAAgB,IAA1D,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0CF,EAAAA,EAAAA,UAAiB,IAA3D,eAAOG,EAAP,KAAsBC,EAAtB,KACQC,EAAiBC,EAAAA,EAAAA,oBAAAA,aAEnBC,EAAkB,SAACC,GACvBA,EAAEC,iBACFD,EAAEE,kBAEF,IACE,IAAMC,EACO,SAAXH,EAAEI,KAAkBJ,EAAEK,aAAaF,MAAQH,EAAEM,OAAOH,MACtD,GAAIA,EAAMI,QAAUJ,EAAMI,OAASd,EAAcc,OAAS,EACxD,IAD4D,IAAD,WAClDC,GACP,IAAMC,EAAcN,EAAMK,GAC1Bd,GAAiB,SAACgB,GAAD,wBACZA,GADY,CAEf,CACEC,iBAAkBF,EAAYG,KAC9BC,mBAAoBC,IAAIC,gBAAgBN,SAG5Cd,EAAcqB,KAAKP,IATZD,EAAI,EAAGA,EAAIL,EAAMI,OAAQC,GAAK,EAAI,EAAlCA,GAYX,MAAOS,IACPC,EAAAA,EAAAA,GAAY,iDAoBVC,EAAkB,mCAAG,2FACzB7B,GAAgBA,GAAa,GACvB8B,EAAW,IAAIC,SACrB1B,EAAc2B,SAAQ,SAACC,GACrBH,EAASI,OAAO,SAAUD,MAJH,SAMnB1B,EAAauB,GANM,OAOzB7B,IAPyB,2CAAH,qDAUxB,OACE,iBACEkC,UAAWC,EACXC,WAAY,SAAC3B,GACXA,EAAEC,iBACFD,EAAEE,mBAEJ0B,OAAQ7B,EANV,WAQIN,EAAcc,SACd,iBAAKkB,UAAWC,EAAhB,WACE,2DACgC,kBADhC,6CAIA,cAAGG,MAAO,CAAEC,UAAW,OAAQC,SAAU,QAAzC,mCAKJ,kBACEC,UAAQ,EACR5B,KAAK,OACL6B,MAAM,GACNrB,KAAK,gBACLsB,OAAO,UACPT,UAAWC,EACXS,SAAUpC,IAEXN,EAAcc,OAAS,IACtB,eAAIkB,UAAWC,EAAf,SACGjC,EAAc2C,KAAI,gBAzDAC,EAyDG1B,EAAH,EAAGA,iBAAkBE,EAArB,EAAqBA,mBAArB,OACjB,2BACE,SAAC,KAAD,CACET,KAAK,SACL6B,MAAM,qBACNR,UAAW,YAAcC,EACzBY,KAAK,aACLC,SAhEaF,EAgEc1B,EAhEc,WACrDjB,EACED,EAAc+C,QACZ,SAACC,GAAD,OAAWA,EAAM9B,mBAAqB0B,MAG1CzC,EACED,EAAc6C,QAAO,SAACjB,GAAD,OAAUA,EAAKX,OAASyB,WA2DrC,gBACEK,IAAK7B,EACL8B,IAAI,iBACJlB,UAAWC,EACXC,WAAY,SAAC3B,GACXA,EAAEC,iBACFD,EAAEE,mBAEJ0B,OAAQ,SAAC5B,GAAD,OAAOA,EAAEC,sBAhBZU,SAsBf,iBAAKc,UAAWC,EAAhB,WACE,SAAC,KAAD,CACEtB,KAAK,SACLwC,KAAK,SACLC,UAAWpD,EAAcc,QAAUlB,EACnCoC,UAAWC,EACXa,QAASpB,KAEX,SAAC,KAAD,CACEf,KAAK,SACLwC,KAAK,QACLC,UAAWpD,EAAcc,QAAUlB,EACnCoC,UAAWC,EACXa,QAlFiB,WACvB3C,EAAiB,IACjBF,EAAiB,UAmFdL,IACC,SAAC,KAAD,CAASyD,KAAM,GAAIC,kBAAmBrB","sources":["webpack://gallery-frontend/./src/components/Modals/ModalUpload/ModalUpload.module.scss?a95d","components/Modals/ModalUpload/ModalUpload.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalUploadWrapper\":\"ModalUpload_modalUploadWrapper__dIz44\",\"modalUploadPlaceholder\":\"ModalUpload_modalUploadPlaceholder__HOjzg\",\"modalUploadArea\":\"ModalUpload_modalUploadArea__m-Y3S\",\"modalUploadImagesPreviewWrapper\":\"ModalUpload_modalUploadImagesPreviewWrapper__saC+d\",\"modalUploadImageDeleteButton\":\"ModalUpload_modalUploadImageDeleteButton__bqRum\",\"modalUploadImagesPreview\":\"ModalUpload_modalUploadImagesPreview__odxiO\",\"modalButtonWrapper\":\"ModalUpload_modalButtonWrapper__VsVRZ\",\"modalUploadButton\":\"ModalUpload_modalUploadButton__xwD2o\",\"spinnerBackdrop\":\"ModalUpload_spinnerBackdrop__iOmaU\"};","import React, { useState } from \"react\";\r\nimport { popupNotice } from \"utils/popupNotice\";\r\nimport { Button, Spinner } from \"../../elements\";\r\nimport store from \"../../../MST/store\";\r\nimport { ModalWindowProps } from \"types/modal\";\r\nimport styles from \"./ModalUpload.module.scss\";\r\n\r\nconst ModalUpload: React.FC<ModalWindowProps> = ({\r\n  isLoading,\r\n  setIsLoading,\r\n  modalCloseHandle,\r\n}) => {\r\n  const [previewImages, setPreviewImages] = useState<any[]>([]);\r\n  const [filesToUpload, setFilesToUpload] = useState<File[]>([]);\r\n  const { uploadImages } = store.imagesStoreSettings;\r\n\r\n  const handleImagesAdd = (e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // defining if we added file through dialogue window - or drag'ndrop\r\n    try {\r\n      const files: FileList =\r\n        e.type === \"drop\" ? e.dataTransfer.files : e.target.files;\r\n      if (files.length && files.length + previewImages.length < 6) {\r\n        for (let i = 0; i < files.length; i += 1) {\r\n          const singleImage = files[i];\r\n          setPreviewImages((previousImages) => [\r\n            ...previousImages,\r\n            {\r\n              previewImageName: singleImage.name,\r\n              previewImageSource: URL.createObjectURL(singleImage),\r\n            },\r\n          ]);\r\n          filesToUpload.push(singleImage);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      popupNotice(\"Error while loading files from local drive.\");\r\n    }\r\n  };\r\n\r\n  const handleImageRemove = (removeImageName: string) => () => {\r\n    setPreviewImages(\r\n      previewImages.filter(\r\n        (image) => image.previewImageName !== removeImageName\r\n      )\r\n    );\r\n    setFilesToUpload(\r\n      filesToUpload.filter((file) => file.name !== removeImageName)\r\n    );\r\n  };\r\n\r\n  const clearUploadModal = () => {\r\n    setFilesToUpload([]);\r\n    setPreviewImages([]);\r\n  };\r\n\r\n  const handleImagesUpload = async () => {\r\n    setIsLoading && setIsLoading(true);\r\n    const formData = new FormData();\r\n    filesToUpload.forEach((file) => {\r\n      formData.append(\"images\", file);\r\n    });\r\n    await uploadImages(formData);\r\n    modalCloseHandle();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={styles.modalUploadWrapper}\r\n      onDragOver={(e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }}\r\n      onDrop={handleImagesAdd}\r\n    >\r\n      {!previewImages.length && (\r\n        <div className={styles.modalUploadPlaceholder}>\r\n          <p>\r\n            Drag'n'drop your images here, <br /> or click to open filepicker\r\n            dialogue.\r\n          </p>\r\n          <p style={{ marginTop: \"10px\", fontSize: \"16px\" }}>\r\n            5 images maximum.\r\n          </p>\r\n        </div>\r\n      )}\r\n      <input\r\n        multiple\r\n        type=\"file\"\r\n        title=\"\"\r\n        name=\"uploadingFile\"\r\n        accept=\"image/*\"\r\n        className={styles.modalUploadArea}\r\n        onChange={handleImagesAdd}\r\n      />\r\n      {previewImages.length > 0 && (\r\n        <ul className={styles.modalUploadImagesPreviewWrapper}>\r\n          {previewImages.map(({ previewImageName, previewImageSource }) => (\r\n            <li key={previewImageName}>\r\n              <Button\r\n                type=\"button\"\r\n                title=\"Delete from upload\"\r\n                className={\"closeBtn \" + styles.modalUploadImageDeleteButton}\r\n                icon=\"icon_close\"\r\n                onClick={handleImageRemove(previewImageName)}\r\n              />\r\n              <img\r\n                src={previewImageSource}\r\n                alt=\"uploading item\"\r\n                className={styles.modalUploadImagesPreview}\r\n                onDragOver={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                }}\r\n                onDrop={(e) => e.preventDefault()}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <div className={styles.modalButtonWrapper}>\r\n        <Button\r\n          type=\"button\"\r\n          text=\"Upload\"\r\n          disabled={!previewImages.length || isLoading}\r\n          className={styles.modalUploadButton}\r\n          onClick={handleImagesUpload}\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          text=\"Clear\"\r\n          disabled={!previewImages.length || isLoading}\r\n          className={styles.modalUploadButton}\r\n          onClick={clearUploadModal}\r\n        />\r\n      </div>\r\n      {isLoading && (\r\n        <Spinner side={20} backdropClassName={styles.spinnerBackdrop} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalUpload;\r\n"],"names":["isLoading","setIsLoading","modalCloseHandle","useState","previewImages","setPreviewImages","filesToUpload","setFilesToUpload","uploadImages","store","handleImagesAdd","e","preventDefault","stopPropagation","files","type","dataTransfer","target","length","i","singleImage","previousImages","previewImageName","name","previewImageSource","URL","createObjectURL","push","error","popupNotice","handleImagesUpload","formData","FormData","forEach","file","append","className","styles","onDragOver","onDrop","style","marginTop","fontSize","multiple","title","accept","onChange","map","removeImageName","icon","onClick","filter","image","src","alt","text","disabled","side","backdropClassName"],"sourceRoot":""}